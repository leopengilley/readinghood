# Generated by Django 4.2.5 on 2023-09-13 00:43

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dates',
            fields=[
                ('dateid', models.AutoField(db_column='DateID', primary_key=True, serialize=False)),
                ('date', models.DateField(db_column='Date')),
            ],
            options={
                'db_table': 'dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Publishers',
            fields=[
                ('publisherid', models.AutoField(db_column='PublisherID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
            ],
            options={
                'db_table': 'publishers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RatingsReviews',
            fields=[
                ('ratedate', models.DateTimeField(auto_now_add=True)),
                ('rating', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], db_column='Rating')),
                ('review', models.TextField(blank=True, db_column='Review', max_length=3000, null=True)),
            ],
            options={
                'db_table': 'ratings_reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=255, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=20, null=True)),
                ('emailaddress', models.CharField(blank=True, db_column='EmailAddress', max_length=255, null=True)),
                ('phone', models.IntegerField(blank=True, db_column='Phone', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('approvedauthor', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], db_column='ApprovedAuthor', max_length=3, null=True)),
                ('activated', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], db_column='Activated', max_length=3, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('bookid', models.AutoField(db_column='BookID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('author', models.CharField(db_column='Author', max_length=255)),
                ('publicationyear', models.IntegerField(db_column='PublicationYear')),
                ('publisher', models.CharField(db_column='Publisher', max_length=255)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('bookdescription', models.CharField(blank=True, db_column='BookDescription', max_length=500, null=True)),
                ('image_url', models.CharField(blank=True, db_column='Image_URL', max_length=255, null=True)),
                ('category', models.CharField(db_column='Category', max_length=255)),
            ],
            options={
                'db_table': 'book',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('members', models.ManyToManyField(related_name='communities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('orderid', models.OneToOneField(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='readinghoodapp.orders')),
                ('itemid', models.IntegerField(db_column='ItemID')),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'order_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('cartid', models.AutoField(db_column='CartID', primary_key=True, serialize=False)),
                ('ordered', models.BooleanField(default=False)),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='readinghoodapp.users')),
            ],
            options={
                'db_table': 'shopping_cart',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name=django.contrib.auth.models.User)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('follows', models.ManyToManyField(blank=True, related_name='followed_by', to='readinghoodapp.profile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('community', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='readinghoodapp.community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_name', models.CharField(max_length=100)),
                ('card_number', models.CharField(max_length=100)),
                ('expiry_date', models.CharField(max_length=100)),
                ('security_code', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=100)),
                ('address2', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(choices=[('ACT', 'Australian Capital Territory'), ('NSW', 'New South Wales'), ('NT', 'Northern Territory'), ('Q', 'Queensland'), ('SA', 'South Australia'), ('TAS', 'Tasmania'), ('VIC', 'Victoria'), ('WA', 'Western Australia')], max_length=100)),
                ('postcode', models.CharField(max_length=10)),
                ('address_type', models.CharField(choices=[('B', 'Billing'), ('S', 'Shipping')], max_length=1)),
                ('default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('ordered', models.BooleanField(default=False)),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='readinghoodapp.book')),
                ('cartid', models.OneToOneField(db_column='CartID', on_delete=django.db.models.deletion.DO_NOTHING, to='readinghoodapp.shoppingcart')),
            ],
            options={
                'db_table': 'cart_item',
                'managed': True,
                'unique_together': {('cartid', 'itemid')},
            },
        ),
    ]
